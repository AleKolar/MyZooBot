from aiogram.enums import ParseMode
from aiogram.types import URLInputFile

from aiogram.filters import Command
from aiogram import types, F, Router
from db import Database

router = Router()
db = Database('DB')

amount = 0
#id_users = []
markup = types.ReplyKeyboardRemove()
ending_markup = types.ReplyKeyboardRemove()

@router.message(Command(commands=["start"]))
async def cmd_start(message: types.Message):
    image_from_url=URLInputFile("https://static.tildacdn.com/tild3537-6661-4639-a235-393535656431/logo-zoo.png")
    await message.answer_photo(image_from_url, caption="–í –ú–æ—Å–∫–æ–≤—Å–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–µ –ø–∞—Ä—É –º–µ—Å—è—Ü–µ–≤ –±—É–¥–µ—Ç —Ä–µ–º–æ–Ω—Ç,\
                –ø–æ—ç—Ç–æ–º—É –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö —Ä–∞—Å—Å–µ–ª—è—é—Ç –ø–æ –∫–≤–∞—Ä—Ç–∏—Ä–∞–º,\
                –µ—Å–ª–∏ –¢—ã –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫\
                –ø—Ä–æ–π–¥–∏ —Ç–µ—Å—Ç, —É–∑–Ω–∞–π –∫–æ–≥–æ –±—ã –¢—ã –º–æ–≥ –∑–∞–±—Ä–∞—Ç—å!? üòÉ")

    kb = [[types.KeyboardButton(text="–ù–∞—á–Ω–µ–º!")]]
    keyboard_start = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True, input_field_placeholder="–°–ú–ï–õ–ï–ô!")
    await message.answer("–ü–æ–¥—É–º–∞–π –∏ ...", reply_markup=keyboard_start)


@router.message(Command(commands=["info"]))
async def cmd_info(message: types.Message):
    kb = [[types.KeyboardButton(text="–ù–∞—á–Ω–µ–º!")]]
    keyboard_start = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    image_from_url = URLInputFile("https://static.tildacdn.com/tild3537-6661-4639-a235-393535656431/logo-zoo.png")
    await message.answer_photo(image_from_url, caption="–í –ú–æ—Å–∫–æ–≤—Å–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–µ –ø–∞—Ä—É –º–µ—Å—è—Ü–µ–≤ –±—É–¥–µ—Ç —Ä–µ–º–æ–Ω—Ç,\
                    –ø–æ—ç—Ç–æ–º—É –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö —Ä–∞—Å—Å–µ–ª—è—é—Ç –ø–æ –∫–≤–∞—Ä—Ç–∏—Ä–∞–º,\
                    –µ—Å–ª–∏ –¢—ã –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫\
                    –ø—Ä–æ–π–¥–∏ —Ç–µ—Å—Ç, —É–∑–Ω–∞–π –∫–æ–≥–æ –±—ã –¢—ã –º–æ–≥ –∑–∞–±—Ä–∞—Ç—å!? üòÉ –ñ–º–∏ '–ù–∞—á–Ω–µ–º!'", reply_markup=keyboard_start)


@router.message(F.text.lower() == "–Ω–∞—á–Ω–µ–º!")
async def yours_choice(message: types.Message):
    if not db.user_exist(message.from_user.id):
        db.add_user(message.from_user.id)
        kb0 = [
            [types.KeyboardButton(text="–ó–∏–º–∞")],
            [types.KeyboardButton(text="–õ–µ—Ç–æ")]
        ]
        keyboard0 = types.ReplyKeyboardMarkup(keyboard=kb0,
        resize_keyboard=True,
        input_field_placeholder="–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Å—è —Å–æ —Å–≤–æ–∏–º –ø–∏—Ç–æ–º—Ü–µ–º")
        await message.answer("–ö–∞–∫–æ–µ –≤—Ä–µ–º—è –≥–æ–¥–∞ –í—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?", reply_markup=keyboard0)
    else:
        await message.answer("–í–∞—à –ø–∏—Ç–æ–º–µ—Ü –í–∞–º–∏ —É–∂–µ –≤—ã–±—Ä–∞–Ω, —ç—Ç–æ–≥–æ –Ω–µ –æ—Ç–º–µ–Ω–∏—Ç—å", reply_markup=ending_markup)


@router.message(F.text.lower() == "–∑–∏–º–∞")
async def yours_choice(message: types.Message):
    global amount
    amount += 3
    kb1 = [
        [types.KeyboardButton(text="–ù–æ—á—å")],
        [types.KeyboardButton(text="–î–µ–Ω—å")]
    ]
    keyboard1 = types.ReplyKeyboardMarkup(keyboard=kb1,
    resize_keyboard=True,
    input_field_placeholder="–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Å—è —Å–æ —Å–≤–æ–∏–º –ø–∏—Ç–æ–º—Ü–µ–º")
    await message.answer("–ö–∞–∫–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ –í—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?", reply_markup=keyboard1)

@router.message(F.text.lower() == "–ª–µ—Ç–æ")
async def yours_choice(message: types.Message):
    global amount
    amount += 1
    kb1 = [
        [types.KeyboardButton(text="–ù–æ—á—å")],
        [types.KeyboardButton(text="–î–µ–Ω—å")]
    ]
    keyboard1 = types.ReplyKeyboardMarkup(keyboard=kb1,
    resize_keyboard=True,
    input_field_placeholder="–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Å—è —Å–æ —Å–≤–æ–∏–º –ø–∏—Ç–æ–º—Ü–µ–º")
    await message.answer("–ö–∞–∫–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ –í—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?", reply_markup=keyboard1)

@router.message(F.text.lower() == "–Ω–æ—á—å")
async def yours_choice(message: types.Message):
    global amount
    amount += 6
    kb2 = [
        [types.KeyboardButton(text="–§—Ä—É–∫—Ç—ã")],
        [types.KeyboardButton(text="–°–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ")]
    ]
    keyboard2 = types.ReplyKeyboardMarkup(keyboard=kb2,
    resize_keyboard=True, input_field_placeholder="–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –í–∞—à –ø–∏—Ç–æ–º–µ—Ü —Å–æ–≤—Å–µ–º –Ω–µ –ø—Ä–æ—Ç–∏–≤ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —Ç—Ä–∞–ø–µ–∑—ã")
    await message.answer("–ß—Ç–æ–±—ã –í—ã —Å–µ–π—á–∞—Å —Å—ä–µ–ª–∏?", reply_markup=keyboard2)

@router.message(F.text.lower() == "–¥–µ–Ω—å")
async def yours_choice(message: types.Message):
    global amount
    amount += 5
    kb2 = [
    [types.KeyboardButton(text="–§—Ä—É–∫—Ç—ã")],
    [types.KeyboardButton(text="–°–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ")]
    ]
    keyboard2 = types.ReplyKeyboardMarkup(keyboard=kb2,
    resize_keyboard=True, input_field_placeholder="–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –í–∞—à –ø–∏—Ç–æ–º–µ—Ü —Å–æ–≤—Å–µ–º –Ω–µ –ø—Ä–æ—Ç–∏–≤ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —Ç—Ä–∞–ø–µ–∑—ã")
    await message.answer("–ß—Ç–æ–±—ã –í—ã —Å–µ–π—á–∞—Å —Å—ä–µ–ª–∏?", reply_markup=keyboard2)

@router.message(F.text.lower() == "—Ñ—Ä—É–∫—Ç—ã")
async def yours_choice(message: types.Message):
    #file_ids = []
    global amount
    amount += 7
    if amount == 13:
        image_from_url = URLInputFile(
            "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/79da8af4-7f66-45fc-b526-2d2395ebc9a8.jpeg")
        await message.answer_photo(
            image_from_url,
            caption="–í–∞–º –æ—á–µ–Ω—å –ø–æ–¥–æ–π–¥–µ—Ç –õ–ï–ú–£–† –ö–û–®–ê–ß–ò–ô, –≤–æ–∑—å–º–∏—Ç–µ –µ–≥–æ üòÉ", reply_markup=markup
        )

        amount = 0
        await message.answer("–≠–¢–û –°–£–î–¨–ë–ê!", reply_markup=ending_markup)
    elif amount == 14:
        image_from_url = URLInputFile(
            "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/11563396-1d63-4451-a0e6-a3fd4282d5cf.jpeg")
        await message.answer_photo(
            image_from_url,
            caption="–í–∞–º –æ—á–µ–Ω—å –ø–æ–¥–æ–π–¥–µ—Ç –î–í–£–•–¶–í–ï–¢–ù–´–ô –ö–û–ñ–ê–ù, –≤–æ–∑—å–º–∏—Ç–µ –µ–≥–æ üòÉ", reply_markup=markup
        )
        amount = 0
        await message.answer("–≠–¢–û –°–£–î–¨–ë–ê!", reply_markup=ending_markup)
    elif amount == 15:
        image_from_url = URLInputFile(
            "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/132e290b-76fd-4fc1-a70c-eba12dcc9e1c.jpeg")
        await message.answer_photo(
            image_from_url,
            caption="–í–∞–º –æ—á–µ–Ω—å –ø–æ–¥–æ–π–¥–µ—Ç –ö–ê–ü–°–ö–ê–Ø –ó–ï–ú–õ–Ø–ù–ê–Ø –ë–ï–õ–ö–ê, –≤–æ–∑—å–º–∏—Ç–µ –µ–≥–æ üòÉ", reply_markup=markup

        )
        amount = 0
        await message.answer("–≠–¢–û –°–£–î–¨–ë–ê!", reply_markup=ending_markup)
    elif amount == 16:
        image_from_url = URLInputFile(
            "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/29c253e7-449f-4f6e-b2ab-e8f89b3f71c2.jpeg")
        await message.answer_photo(
            image_from_url,
            caption="–í–∞–º –æ—á–µ–Ω—å –ø–æ–¥–æ–π–¥–µ—Ç –ë–û–†–û–î–ê–¢–ê–Ø –ù–ï–Ø–°–´–¢–¨, –≤–æ–∑—å–º–∏—Ç–µ –µ–≥–æ üòÉ", reply_markup=markup

        )
        amount = 0
        await message.answer("–≠–¢–û –°–£–î–¨–ë–ê!", reply_markup=ending_markup)
    else:
        if amount == 17:
            image_from_url = URLInputFile(
                "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/29c253e7-449f-4f6e-b2ab-e8f89b3f71c2.jpeg")
            await message.answer_photo(
                image_from_url,
                caption="–í–∞–º –æ—á–µ–Ω—å –ø–æ–¥–æ–π–¥–µ—Ç –ë–ï–õ–ê–Ø –°–û–í–ê, –≤–æ–∑—å–º–∏—Ç–µ –µ–≥–æ üòÉ", reply_markup=markup

            )
            amount = 0
            await message.answer("–≠–¢–û –°–£–î–¨–ë–ê!", reply_markup=ending_markup)
@router.message(F.text.lower() == "—Å–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ")
async def yours_choice(message: types.Message):
    file_ids = []
    global amount
    amount += 8
    if amount == 13:
        image_from_url = URLInputFile(
            "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/79da8af4-7f66-45fc-b526-2d2395ebc9a8.jpeg")
        await message.answer_photo(
            image_from_url,
            caption="–í–∞–º –æ—á–µ–Ω—å –ø–æ–¥–æ–π–¥–µ—Ç –õ–ï–ú–£–† –ö–û–®–ê–ß–ò–ô, –≤–æ–∑—å–º–∏—Ç–µ –µ–≥–æ üòÉ", reply_markup=markup

        )
        amount = 0
        await message.answer("–≠–¢–û –°–£–î–¨–ë–ê!", reply_markup=ending_markup)
    elif amount == 14:
        image_from_url = URLInputFile(
            "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/11563396-1d63-4451-a0e6-a3fd4282d5cf.jpeg")
        await message.answer_photo(
            image_from_url,
            caption="–í–∞–º –æ—á–µ–Ω—å –ø–æ–¥–æ–π–¥–µ—Ç –î–í–£–•–¶–í–ï–¢–ù–´–ô –ö–û–ñ–ê–ù, –≤–æ–∑—å–º–∏—Ç–µ –µ–≥–æ üòÉ", reply_markup=markup

        )
        amount = 0
        await message.answer("–≠–¢–û –°–£–î–¨–ë–ê!", reply_markup=ending_markup)
    elif amount == 15:
        image_from_url = URLInputFile(
            "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/132e290b-76fd-4fc1-a70c-eba12dcc9e1c.jpeg")
        await message.answer_photo(
            image_from_url,
            caption="–í–∞–º –æ—á–µ–Ω—å –ø–æ–¥–æ–π–¥–µ—Ç –ö–ê–ü–°–ö–ê–Ø –ó–ï–ú–õ–Ø–ù–ê–Ø –ë–ï–õ–ö–ê, –≤–æ–∑—å–º–∏—Ç–µ –µ–≥–æ üòÉ", reply_markup=markup

        )
        amount = 0
        await message.answer("–≠–¢–û –°–£–î–¨–ë–ê!", reply_markup=ending_markup)
    elif amount == 16:
        image_from_url = URLInputFile(
            "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/29c253e7-449f-4f6e-b2ab-e8f89b3f71c2.jpeg")
        await message.answer_photo(
            image_from_url,
            caption="–í–∞–º –æ—á–µ–Ω—å –ø–æ–¥–æ–π–¥–µ—Ç –ë–û–†–û–î–ê–¢–ê–Ø –ù–ï–Ø–°–´–¢–¨, –≤–æ–∑—å–º–∏—Ç–µ –µ–≥–æ üòÉ", reply_markup=markup

        )
        amount = 0
        await message.answer("–≠–¢–û –°–£–î–¨–ë–ê!", reply_markup=ending_markup)
    elif amount == 17:
        image_from_url = URLInputFile(
            "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/042d7c00-9abf-4553-9b3d-eedd08f72090.jpeg")
        await message.answer_photo(
            image_from_url,
            caption="–í–∞–º –æ—á–µ–Ω—å –ø–æ–¥–æ–π–¥–µ—Ç –ë–ï–õ–ê–Ø –°–û–í–ê, –≤–æ–∑—å–º–∏—Ç–µ –µ–≥–æ üòÉ", reply_markup=markup

        )
        amount = 0
        await message.answer("–≠–¢–û –°–£–î–¨–ë–ê!", reply_markup=ending_markup)
    else:
        await message.answer("–£ –Ω–∞—Å –Ω–µ—Ç –¥–ª—è –í–∞—Å –ø–∏—Ç–æ–º—Ü–∞")
        amount = 0
        await message.answer("–≠–¢–û –°–£–î–¨–ë–ê!", reply_markup=ending_markup)